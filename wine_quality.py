# -*- coding: utf-8 -*-
"""Wine Quality.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1myQS1OnAkHK1OSMXJWKmZSPjEQGsIxlR
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.feature_selection import SelectKBest, f_regression
import csv

df=pd.read_csv('/content/drive/MyDrive/1788410-1767134-1729261-1613779-Red_wine__(1).csv')
df.replace([np.inf, -np.inf], np.nan, inplace=True)
df.dropna(inplace=True)
df

df1=pd.DataFrame()
outliers_series=[]
for column in df.columns:
    median=np.median(df)
    mad = np.median(np.abs(df- median))
    modified_z_scores = 0.6745 * (df- median) / mad
    threshold = 3.5
    outliers = (np.abs(modified_z_scores) < threshold)
df1[['Outlier a','Outlier b','Outlier c','Outlier d','Outlier e','Outlier f','Outlier g','Outlier h','Outlier i','Outlier j','Outlier k','Outlier l']]=outliers

df1

attributes = ['fixed acidity', 'volatile acidity','residual sugar','chlorides',	'free sulfur dioxide','total sulfur dioxide',	'density',	'pH',	'sulphates','alcohol']
x=df[attributes]
y=df['quality'].values
f2,p= f_regression(x,y,center=True, force_finite=True)
results_df = pd.DataFrame({'Attribute': attributes, 'F-Statistic': f2, 'P-Value':p})

results_df

k_best = SelectKBest(score_func=f_regression, k=6)
x_new = k_best.fit_transform(x, y)
selected_indices = k_best.get_support(indices=True)
selected_attributes = [attributes[i] for i in selected_indices]
selected_features = pd.DataFrame(x_new, columns=selected_attributes)
print("Selected features:")
print(selected_features)

X_train, X_test, y_train, y_test = train_test_split(selected_features, y, test_size=0.30, random_state=42)
Model=DecisionTreeClassifier(max_depth=None)
Model.fit(X_train, y_train)
y_pred = Model.predict(X_test)
y_pred=np.array(y_pred)
y_pred

price = y_pred
file_n = 'Sample_Submission.csv'
with open(file_n, 'w', newline='') as csvfile:
    csv_w = csv.writer(csvfile)
    csv_w.writerow(['Quality'])
    for Price in price:
        csv_w.writerow([Price])